// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TicketsMS.Infrastructure.Data;

#nullable disable

namespace TicketsMS.Migrations
{
    [DbContext(typeof(TicketDbContext))]
    partial class TicketDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TicketsMS.Domain.Entities.TicketSales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdTicket")
                        .HasColumnType("integer")
                        .HasColumnName("id_ticket");

                    b.Property<int>("IdTransaction")
                        .HasColumnType("integer")
                        .HasColumnName("id_transaction");

                    b.Property<int>("IdUser")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdTicket")
                        .IsUnique();

                    b.ToTable("ticket_sales", (string)null);
                });

            modelBuilder.Entity("TicketsMS.Domain.Entities.Tickets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<int?>("IdMatch")
                        .HasColumnType("integer")
                        .HasColumnName("id_match");

                    b.Property<int?>("IdTournament")
                        .HasColumnType("integer")
                        .HasColumnName("id_tournament");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("tickets", (string)null);
                });

            modelBuilder.Entity("TicketsMS.Domain.Entities.TicketSales", b =>
                {
                    b.HasOne("TicketsMS.Domain.Entities.Tickets", "Ticket")
                        .WithOne("TicketSales")
                        .HasForeignKey("TicketsMS.Domain.Entities.TicketSales", "IdTicket")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("TicketsMS.Domain.Entities.Tickets", b =>
                {
                    b.Navigation("TicketSales")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
