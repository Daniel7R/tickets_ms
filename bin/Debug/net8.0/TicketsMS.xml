<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TicketsMS</name>
    </assembly>
    <members>
        <member name="M:TicketsMS.API.Controllers.TicketController.GetAvailableTickets(System.Int32)">
            <summary>
            Get tickets by id tournament
            </summary>
            <param name="ticketType"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:TicketsMS.API.Controllers.TicketController.GetTicketByUser(System.Int32)">
            <summary>
            
            </summary>
            <param name="userId"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:TicketsMS.Application.Messages.Request.EmailNotificationRequest.IdUser">
            <summary>
            With id can get email
            </summary>
        </member>
        <member name="P:TicketsMS.Application.Messages.Request.EmailNotificationRequest.Subject">
            <summary>
             Email subject
            </summary>
        </member>
        <member name="P:TicketsMS.Application.Messages.Request.EmailNotificationRequest.Body">
            <summary>
             Body of the email
            </summary>
        </member>
        <member name="T:TicketsMS.Application.Messages.Request.GenerateTicketSale">
            <summary>
               dto to handle Ticket Sale Queue
            </summary>
        </member>
        <member name="P:TicketsMS.Application.Messages.Request.GenerateTicketSale.IdTransaction">
            <summary>
              Id of the transaction
            </summary>
        </member>
        <member name="P:TicketsMS.Application.Messages.Request.GenerateTicketSale.IdUser">
            <summary>
             Id of the user
            </summary>
        </member>
        <member name="P:TicketsMS.Application.Messages.Request.GenerateTicketSale.IdTicket">
            <summary>
             Id of the ticket
            </summary>
        </member>
        <member name="M:TicketsMS.Application.Services.TicketService.GenerateTicketViewer(System.Int32,System.Boolean,System.Decimal)">
            <summary>
                This methods 
            </summary>
            <param name="idMatch"></param>
            <param name="isFree"></param>
            <param name="price"></param>
            <returns></returns>
            <exception cref="T:TicketsMS.Domain.Exceptions.BusinessRuleException"></exception>
        </member>
        <member name="M:TicketsMS.Infrastructure.EventBus.EventBusConsumer.RegisterQueueHandler``2(System.String,System.Func{``0,System.Threading.Tasks.Task{``1}})">
            <summary>
                Register a Request/Reply queue manager
            </summary>
            <typeparam name="TRequest"></typeparam>
            <typeparam name="TResponse"></typeparam>
            <param name="queueName"></param>
            <param name="handler"></param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:TicketsMS.Infrastructure.EventBus.EventBusConsumer.RegisterEventHandlerAsync``1(System.String,System.Func{``0,System.Threading.Tasks.Task})">
            <summary>
                Register an async Event queue manager
            </summary>
            <typeparam name="TEvent"></typeparam>
            <param name="queueName"></param>
            <param name="handler"></param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:TicketsMS.Migrations.init">
            <inheritdoc />
        </member>
        <member name="M:TicketsMS.Migrations.init.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TicketsMS.Migrations.init.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TicketsMS.Migrations.init.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
